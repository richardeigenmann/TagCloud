buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.22.0" // dependency updates
}

apply plugin: 'java'
apply plugin: "jacoco"

repositories {
    mavenCentral()
}

sourceCompatibility = '1.9'
targetCompatibility = '1.9'

compileJava {
    options.encoding = "UTF-8"
}
compileTestJava {
    options.encoding = "UTF-8"
}


// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.tagcloud.sample.SampleTagCloud'
}

jar {
    manifest.attributes("Main-Class": "org.tagcloud.sample.SampleTagCloud")
}


dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testCompile group: 'junit', name: 'junit', version: '4.13-beta-3'
}


test {
    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    }
}

task run(type: JavaExec) {
    group 'build'
    description 'Runs the sample application'
    dependsOn jar
    classpath = files('build/libs/TagCloud.jar')
    main = 'org.tagcloud.sample.SampleTagCloud'
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.encoding = 'UTF-8'
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

// Reminder how to build the github webpage http://richardeigenmann.github.io/TagCloud/
// Go to Github repository > Settings > Automatic Page Generator
// Click Load Readme.md
// Click Continue to Layouts
// Pick Dinky
// Click publish

// Copy the src/resources to a safe place

// now add Javadoc & Jar file
// git checkout master
// /home/richi/gradle-1.12/bin/gradle javadoc java
// git checkout gh-pages
// cp build/libs/TagCloud.jar .
// mkdir -p javadoc
// cp -r build/docs/javadoc/* javadoc/

// Edit index.html page
// in <header> add these two li entries, removing the 2 download entries:
// <li class="download"><a class="buttons" href="TagCloud.jar">Download JAR</a></li>
// <li><a class="buttons github" href="javadoc">Javadoc</a></li>
// create a Run as Java Web Start entry

// copy the files in the saved src/resouces to the root directory

// git add TagCloud.jar javadoc index.html Screenshot* TagCloud.jnlp
// git commit -m "update website"
// git push
